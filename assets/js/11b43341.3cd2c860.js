"use strict";(self.webpackChunkBifroMQ=self.webpackChunkBifroMQ||[]).push([[2256],{15293:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next (Incubating)","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Get Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Download","href":"/docs/get_started/download/intro","docId":"get_started/download/intro","unlisted":false},{"type":"link","label":"Quick Install & Verify","href":"/docs/get_started/quick_install","docId":"get_started/quick_install","unlisted":false},{"type":"link","label":"Frequently Asked Questions","href":"/docs/get_started/faq","docId":"get_started/faq","unlisted":false},{"type":"link","label":"Road Map","href":"/docs/get_started/roadmap","docId":"get_started/roadmap","unlisted":false}],"href":"/docs/get_started/intro"},{"type":"category","label":"Installation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Docker","href":"/docs/installation/docker","docId":"installation/docker","unlisted":false},{"type":"link","label":"Linux","href":"/docs/installation/linux","docId":"installation/linux","unlisted":false},{"type":"link","label":"Windows","href":"/docs/installation/windows","docId":"installation/windows","unlisted":false},{"type":"link","label":"Install from Source","href":"/docs/installation/install_from_source","docId":"installation/install_from_source","unlisted":false},{"type":"link","label":"Configuration Convention & Migration","href":"/docs/installation/config_migration_between_versions","docId":"installation/config_migration_between_versions","unlisted":false},{"type":"link","label":"Notes on Kubernetes Deployment","href":"/docs/installation/nodes_on_k8s","docId":"installation/nodes_on_k8s","unlisted":false}],"href":"/docs/installation/intro"},{"type":"category","label":"BifroMQ Cluster","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"StandardCluster","href":"/docs/cluster/standardcluster","docId":"cluster/standardcluster","unlisted":false},{"type":"link","label":"High Availability","href":"/docs/cluster/high_availability","docId":"cluster/high_availability","unlisted":false},{"type":"link","label":"Upgrade","href":"/docs/cluster/upgrade","docId":"cluster/upgrade","unlisted":false}],"href":"/docs/cluster/intro"},{"type":"category","label":"User Guide","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Basic MQTT Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Connect to BifroMQ","href":"/docs/user_guide/basic/connect","docId":"user_guide/basic/connect","unlisted":false},{"type":"link","label":"Pub/Sub","href":"/docs/user_guide/basic/pubsub","docId":"user_guide/basic/pubsub","unlisted":false},{"type":"link","label":"Shared Subscriptions","href":"/docs/user_guide/basic/shared_sub","docId":"user_guide/basic/shared_sub","unlisted":false}],"href":"/docs/user_guide/basic/intro"},{"type":"link","label":"Data Integration","href":"/docs/user_guide/integration/intro","docId":"user_guide/integration/intro","unlisted":false},{"type":"category","label":"API Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Frequently Used APIs","href":"/docs/user_guide/api/api_reference","docId":"user_guide/api/api_reference","unlisted":false}],"href":"/docs/user_guide/api/intro"}],"href":"/docs/user_guide/intro"},{"type":"category","label":"Plugin","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Auth Provider","href":"/docs/plugin/auth_provider","docId":"plugin/auth_provider","unlisted":false},{"type":"link","label":"Client Balancer","href":"/docs/plugin/client_balancer","docId":"plugin/client_balancer","unlisted":false},{"type":"link","label":"Event Collector","href":"/docs/plugin/event_collector","docId":"plugin/event_collector","unlisted":false},{"type":"link","label":"Resource Throttler","href":"/docs/plugin/resource_throttler","docId":"plugin/resource_throttler","unlisted":false},{"type":"category","label":"Setting Provider","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Tenant-level Settings","href":"/docs/plugin/setting_provider/tenantsetting","docId":"plugin/setting_provider/tenantsetting","unlisted":false}],"href":"/docs/plugin/setting_provider/intro"},{"type":"link","label":"Plugin Practice and Notice","href":"/docs/plugin/plugin_practice","docId":"plugin/plugin_practice","unlisted":false}],"href":"/docs/plugin/intro"},{"type":"category","label":"Administration","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Configuration","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Config File Manual","href":"/docs/admin_guide/configuration/config_file_manual","docId":"admin_guide/configuration/config_file_manual","unlisted":false},{"type":"link","label":"System Properties","href":"/docs/admin_guide/configuration/bifromq_sys_props","docId":"admin_guide/configuration/bifromq_sys_props","unlisted":false},{"type":"link","label":"Configuration Printing","href":"/docs/admin_guide/configuration/configs_print","docId":"admin_guide/configuration/configs_print","unlisted":false}],"href":"/docs/admin_guide/configuration/intro"},{"type":"category","label":"Tuning","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Linux Kernel Tuning","href":"/docs/admin_guide/tuning/os_tuning_linux","docId":"admin_guide/tuning/os_tuning_linux","unlisted":false}],"href":"/docs/admin_guide/tuning/intro"},{"type":"category","label":"Observability","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Logging","href":"/docs/admin_guide/observability/logging","docId":"admin_guide/observability/logging","unlisted":false},{"type":"category","label":"Metrics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Tenant-level Metrics","href":"/docs/admin_guide/observability/metrics/tenantmetrics","docId":"admin_guide/observability/metrics/tenantmetrics","unlisted":false}],"href":"/docs/admin_guide/observability/metrics/intro"},{"type":"link","label":"Events","href":"/docs/admin_guide/observability/events","docId":"admin_guide/observability/events","unlisted":false}],"href":"/docs/admin_guide/observability/intro"},{"type":"link","label":"Security","href":"/docs/admin_guide/security/intro","docId":"admin_guide/security/intro","unlisted":false}],"href":"/docs/admin_guide/overview"}]},"docs":{"admin_guide/configuration/bifromq_sys_props":{"id":"admin_guide/configuration/bifromq_sys_props","title":"System Properties","description":"Before adjusting system properties in BifroMQ, it\'s necessary to have a thorough understanding of its internal mechanisms, as inappropriate modifications can lead to unexpected behavior. Additionally, these system properties are closely","sidebar":"tutorialSidebar"},"admin_guide/configuration/config_file_manual":{"id":"admin_guide/configuration/config_file_manual","title":"Config File Manual","description":"The configuration file for BifroMQ is a YAML file located in the conf directory under standalone.yml. This file contains all the configuration parameters for BifroMQ. When starting BifroMQ, you can specify the path to the configuration","sidebar":"tutorialSidebar"},"admin_guide/configuration/configs_print":{"id":"admin_guide/configuration/configs_print","title":"Configuration Printing","description":"When BifroMQ starts, it prints the values of various configurations in the info logs. Printing configuration information helps you understand the specific settings of the BifroMQ service, facilitating troubleshooting. It is also recommended","sidebar":"tutorialSidebar"},"admin_guide/configuration/intro":{"id":"admin_guide/configuration/intro","title":"Configuration Overview","description":"Based on different usage scenarios, BifroMQ divides configurations into system-level and tenant-level. System-level configurations are set at the system\'s startup and cannot be changed afterward. In contrast, tenant-level configurations can be dynamically adjusted during runtime as needed, and their initial values can also be customized at the system\'s startup. The capability for tenant-level settings requires the implementation of a custom setting provider plugin, which is not covered in this chapter.","sidebar":"tutorialSidebar"},"admin_guide/observability/events":{"id":"admin_guide/observability/events","title":"Events","description":"BifroMQ generates events at crucial junctures in its workflow, providing users with the ability to implement custom event collector plugins to capture and process these events.","sidebar":"tutorialSidebar"},"admin_guide/observability/intro":{"id":"admin_guide/observability/intro","title":"Observability Overview","description":"In the administration of BifroMQ, ensuring comprehensive system observability stands as a foundational element for conducting effective system operations and maintenance activities. Given BifroMQ\'s unique positioning as a multi-tenant capable MQTT broker, its observability features not only facilitate general operational excellence but are also crucial for the efficient management of multi-tenant business scenarios. This section explores the key components of BifroMQ\'s observability capabilities: logging, metrics, and events, with a particular focus on features designed to support multi-tenant environments.","sidebar":"tutorialSidebar"},"admin_guide/observability/logging":{"id":"admin_guide/observability/logging","title":"Logging","description":"BifroMQ utilizes the standard SLF4J interface for logging purposes and selects Apache Log4j as its logging backend. The logs are organized into five distinct levels: TRACE, DEBUG, INFO, WARN, and ERROR, with INFO set as the default log level.","sidebar":"tutorialSidebar"},"admin_guide/observability/metrics/intro":{"id":"admin_guide/observability/metrics/intro","title":"Metrics","description":"BifroMQ adopts Micrometer as its framework for metrics collection, analogous to its use of SLF4J and Logback for logging purposes. Micrometer acts as the \\"SLF4J for metrics\\" within BifroMQ, providing an easy way to collect metrics without binding users to a specific metrics backend. Instead, users are free to choose their preferred monitoring system and can direct metrics to it using BifroMQ\'s plugin mechanism.","sidebar":"tutorialSidebar"},"admin_guide/observability/metrics/tenantmetrics":{"id":"admin_guide/observability/metrics/tenantmetrics","title":"Tenant-level Metrics","description":"Below is a comprehensive table of BifroMQ\'s tenant metrics, including their MetricName (as recognized within Micrometer), the type of meter used, and a brief description of each metric\'s purpose.","sidebar":"tutorialSidebar"},"admin_guide/overview":{"id":"admin_guide/overview","title":"Admin Guide Overview","description":"The administration of BifroMQ encompasses two levels: system-level management and tenant-level management. The former is mainly targeted at system administrators and operations personnel, while the requirements for tenant-level management","sidebar":"tutorialSidebar"},"admin_guide/security/intro":{"id":"admin_guide/security/intro","title":"Security Overview","description":"Security, a broad and critical aspect of any system, is a key focus for BifroMQ. Recognizing the importance of securing MQTT broker deployments, BifroMQ offers a suite of features designed to address various security concerns, from cluster isolation to client authentication and risk management of malicious client behavior.","sidebar":"tutorialSidebar"},"admin_guide/tuning/intro":{"id":"admin_guide/tuning/intro","title":"Tuning Overview","description":"Performance tuning in BifroMQ requires starting with adjustments in the running environment and specific optimizations for the workload.","sidebar":"tutorialSidebar"},"admin_guide/tuning/os_tuning_linux":{"id":"admin_guide/tuning/os_tuning_linux","title":"Linux Kernel Tuning","description":"The following Kernel parameters can affect the maximum number of connections that the machine hosting BifroMQ can accept.","sidebar":"tutorialSidebar"},"cluster/high_availability":{"id":"cluster/high_availability","title":"High Availability","description":"BifroMQ is designed to deliver high availability by leveraging a decentralized cluster-building capability provided by its Gossip-based protocol (base-cluster). This architecture eliminates the need for additional service discovery components to establish a cluster, thereby reducing the operational risks associated with single points of failure. The result is a system that can scale flexibly and maintain high availability across all nodes in the cluster.","sidebar":"tutorialSidebar"},"cluster/intro":{"id":"cluster/intro","title":"BifroMQ Cluster Overview","description":"BifroMQ employs a decentralized clustering approach, where MQTT protocol workloads are distributed across independent sub-clusters, each dedicated to specific functions. This design is built upon two foundational layers: the Underlay","sidebar":"tutorialSidebar"},"cluster/standardcluster":{"id":"cluster/standardcluster","title":"StandardCluster","description":"This section illustrates the deployment process for a 3-node cluster. Similar to deployment on Linux, you need to extract the downloaded tar file first.","sidebar":"tutorialSidebar"},"cluster/upgrade":{"id":"cluster/upgrade","title":"Upgrade","description":"Important: Since BifroMQ joined the Apache Incubator, the Java package names have changed. Users of pre-incubation versions must migrate to the Apache-released BifroMQ versions to avoid package conflicts.","sidebar":"tutorialSidebar"},"get_started/download/intro":{"id":"get_started/download/intro","title":"Download","description":"BifroMQ releases consist of two parts:","sidebar":"tutorialSidebar"},"get_started/faq":{"id":"get_started/faq","title":"Frequently Asked Questions","description":"What versions of the MQTT protocol are supported by BifroMQ?","sidebar":"tutorialSidebar"},"get_started/intro":{"id":"get_started/intro","title":"Introduction","description":"BifroMQ (Incubating) is a Java-based, high-performance, distributed MQTT broker implementation that seamlessly integrates native multi-tenancy support. It is designed to facilitate the building of large-scale IoT device connections and messaging","sidebar":"tutorialSidebar"},"get_started/quick_install":{"id":"get_started/quick_install","title":"Quick Install & Verify","description":"For a rapid setup, Docker is recommended:","sidebar":"tutorialSidebar"},"get_started/roadmap":{"id":"get_started/roadmap","title":"Road Map","description":"This roadmap is organized into two categories:","sidebar":"tutorialSidebar"},"installation/config_migration_between_versions":{"id":"installation/config_migration_between_versions","title":"Configuration Convention & Migration","description":"Configurations may vary between different versions. When deploying BifroMQ, you can use previous configuration files, and it won\'t prevent BifroMQ from starting. However, please be aware that these older configurations might not take effect.","sidebar":"tutorialSidebar"},"installation/docker":{"id":"installation/docker","title":"Docker","description":"Prerequisites","sidebar":"tutorialSidebar"},"installation/install_from_source":{"id":"installation/install_from_source","title":"Install from Source","description":"Prerequisites","sidebar":"tutorialSidebar"},"installation/intro":{"id":"installation/intro","title":"Installation Overview","description":"Prerequisites","sidebar":"tutorialSidebar"},"installation/linux":{"id":"installation/linux","title":"Linux","description":"Prerequisites","sidebar":"tutorialSidebar"},"installation/nodes_on_k8s":{"id":"installation/nodes_on_k8s","title":"Notes on Kubernetes Deployment","description":"Deploying BifroMQ on Kubernetes requires careful consideration of its stateful service characteristics and understanding of Kubernetes-specific cluster operations and maintenance practices. Here are some key considerations and guidelines.","sidebar":"tutorialSidebar"},"installation/windows":{"id":"installation/windows","title":"Windows","description":"Prerequisites","sidebar":"tutorialSidebar"},"plugin/auth_provider":{"id":"plugin/auth_provider","title":"Auth Provider","description":"The Auth Provider plugin enhances BifroMQ by integrating authentication and authorization functionalities for MQTT clients and Pub/Sub operations. The plugin\'s interface is detailed in the following Maven module:","sidebar":"tutorialSidebar"},"plugin/client_balancer":{"id":"plugin/client_balancer","title":"Client Balancer","description":"","sidebar":"tutorialSidebar"},"plugin/event_collector":{"id":"plugin/event_collector","title":"Event Collector","description":"The Event Collector plugin is designed to capture a variety of events that occur during the running of BifroMQ. The interface for this plugin is defined in the following Maven module:","sidebar":"tutorialSidebar"},"plugin/intro":{"id":"plugin/intro","title":"Plugin Overview","description":"The plugin mechanism is a primary way for BifroMQ to deeply integrate with business systems. Currently, BifroMQ exposes five types of plugin extension interfaces to cater to different usage scenarios:","sidebar":"tutorialSidebar"},"plugin/plugin_practice":{"id":"plugin/plugin_practice","title":"Plugin Practice and Notice","description":"This article outlines some practices and considerations when developing BifroMQ plugins.","sidebar":"tutorialSidebar"},"plugin/resource_throttler":{"id":"plugin/resource_throttler","title":"Resource Throttler","description":"In BifroMQ\'s multi-tenant architecture, tenants share resources provided by a single cluster instance. To prevent any single tenant from overusing resources and impacting others, it is crucial to control each tenant\'s resource usage","sidebar":"tutorialSidebar"},"plugin/setting_provider/intro":{"id":"plugin/setting_provider/intro","title":"Setting Provider","description":"BifroMQ defines a category of Tenant-level Settings that can be modified at runtime, allowing for dynamic adjustment of BifroMQ\'s service behavior per tenant. The purpose of the Setting Provider Plugin is to supply","sidebar":"tutorialSidebar"},"plugin/setting_provider/tenantsetting":{"id":"plugin/setting_provider/tenantsetting","title":"Tenant-level Settings","description":"Tenant-level settings allow for detailed control of BifroMQ\'s functionality and performance characteristics. Each setting can be adjusted per tenant, enabling customized behavior according to the specific requirements and preferences of","sidebar":"tutorialSidebar"},"user_guide/api/api_reference":{"id":"user_guide/api/api_reference","title":"Frequently Used APIs","description":"Below are some frequently used APIs. For the full Swagger API definitions, see the target/output/site/swagger directory generated after building the project.","sidebar":"tutorialSidebar"},"user_guide/api/intro":{"id":"user_guide/api/intro","title":"API Overview","description":"BifroMQ incorporates built-in API capabilities, allowing for operations such as disconnecting client connections, querying session status, publishing messages, and managing subscriptions. These features enable the integration of BifroMQ\'s management operations into custom management workflows.","sidebar":"tutorialSidebar"},"user_guide/basic/connect":{"id":"user_guide/basic/connect","title":"Connect to BifroMQ","description":"BifroMQ is a standard MQTT messaging middleware, which allows you to connect using any client that supports MQTT version 3.1, 3.1.1 or 5.0.","sidebar":"tutorialSidebar"},"user_guide/basic/intro":{"id":"user_guide/basic/intro","title":"MQTT Basic Features Highlights","description":"BifroMQ provides extensive MQTT protocol support for IoT applications and services, demonstrated through compatibility with different protocol versions, customized configurations for tenants, dynamic adjustment capabilities, message interchangeability across protocol versions, and support for shared subscriptions in specific protocol versions.","sidebar":"tutorialSidebar"},"user_guide/basic/pubsub":{"id":"user_guide/basic/pubsub","title":"Pub/Sub","description":"According to the MQTT protocol, entities involved in sending and receiving messages can be categorized as Publishers and Subscribers. The basic model is depicted below:","sidebar":"tutorialSidebar"},"user_guide/basic/shared_sub":{"id":"user_guide/basic/shared_sub","title":"Shared Subscriptions","description":"MQTT Shared Subscriptions are a feature of the MQTT protocol that enables multiple subscribers to receive messages from the same topic in a fair manner.","sidebar":"tutorialSidebar"},"user_guide/integration/intro":{"id":"user_guide/integration/intro","title":"Data Integration Overview","description":"BifroMQ focuses on being deeply integrated, providing foundational MQTT capabilities for various messaging systems. This guide primarily introduces the recommended methods for data integration with BifroMQ.","sidebar":"tutorialSidebar"},"user_guide/intro":{"id":"user_guide/intro","title":"User Guide Overview","description":"BifroMQ is a sophisticated, Java-based MQTT broker that excels in providing high-performance, distributed messaging capabilities. With its native support for multi-tenancy, BifroMQ stands out as a versatile tool for integrating MQTT","sidebar":"tutorialSidebar"}}}}')}}]);