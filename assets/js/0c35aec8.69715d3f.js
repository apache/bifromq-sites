"use strict";(self.webpackChunkBifroMQ=self.webpackChunkBifroMQ||[]).push([[9379],{4843:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>x,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"user_guide/api/api_reference","title":"API Reference","description":"API Endpoints","source":"@site/versioned_docs/version-3.0.x/05_user_guide/3_api/1_api_reference.md","sourceDirName":"05_user_guide/3_api","slug":"/user_guide/api/api_reference","permalink":"/docs/3.0.x/user_guide/api/api_reference","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/bifromq-sites/tree/master/website/versioned_docs/version-3.0.x/05_user_guide/3_api/1_api_reference.md","tags":[],"version":"3.0.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"API Reference"},"sidebar":"tutorialSidebar","previous":{"title":"API Overview","permalink":"/docs/3.0.x/user_guide/api/intro"},"next":{"title":"Plugin Overview","permalink":"/docs/3.0.x/plugin/intro"}}');var r=i(23420),d=i(65404);const l={sidebar_position:1,title:"API Reference"},c=void 0,t={},o=[{value:"API Endpoints",id:"api-endpoints",level:2},{value:"1. Publish a message to given topic",id:"1-publish-a-message-to-given-topic",level:3},{value:"2. Retain a message to given topic/Clear retained message for given topic",id:"2-retain-a-message-to-given-topicclear-retained-message-for-given-topic",level:3},{value:"3. Get session information of given user and client id",id:"3-get-session-information-of-given-user-and-client-id",level:3},{value:"4. Expire inactive persistent session using given expiry time",id:"4-expire-inactive-persistent-session-using-given-expiry-time",level:3},{value:"Note",id:"note",level:4},{value:"5. Disconnect a MQTT client connection",id:"5-disconnect-a-mqtt-client-connection",level:3},{value:"6. Add a Topic Subscription to an MQTT session",id:"6-add-a-topic-subscription-to-an-mqtt-session",level:3},{value:"8. Remove a Topic Subscription from an MQTT session",id:"8-remove-a-topic-subscription-from-an-mqtt-session",level:3}];function h(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,r.jsx)(n.h3,{id:"1-publish-a-message-to-given-topic",children:"1. Publish a message to given topic"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"URL"}),": ",(0,r.jsx)(n.code,{children:"/pub"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method"}),": ",(0,r.jsx)(n.code,{children:"POST"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Headers"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"req_id"})," (optional): Optional caller-provided request ID. Integer (int64)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tenant_id"})," (required): The tenant ID. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"topic"})," (required): The message topic. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"qos"})," (required): QoS of the message to be retained. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"expiry_seconds"})," (optional): The message expiry seconds. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_type"})," (required): The publisher type. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_meta_*"}),": The metadata header about the publisher, must start with ",(0,r.jsx)(n.code,{children:"client_meta_"}),". String."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Request Body"}),": Message payload will be treated as binary."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responses"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"200"}),": Success."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-retain-a-message-to-given-topicclear-retained-message-for-given-topic",children:"2. Retain a message to given topic/Clear retained message for given topic"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"URL"}),": ",(0,r.jsx)(n.code,{children:"/retain"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method"}),": ",(0,r.jsx)(n.code,{children:"POST"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Headers"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"req_id"})," (optional): Optional caller-provided request ID. Integer (int64)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tenant_id"})," (required): The tenant ID. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"topic"})," (required): The message topic. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"qos"})," (required): QoS of the message to be retained. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"expiry_seconds"})," (optional): The message expiry seconds. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_type"})," (required): The publisher type. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_meta_*"}),": The metadata header about the publisher, must start with ",(0,r.jsx)(n.code,{children:"client_meta_"}),". String."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Request Body"}),": Message payload will be treated as binary or zero-bytes for clearing retained message."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responses"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"200"}),": Success."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-get-session-information-of-given-user-and-client-id",children:"3. Get session information of given user and client id"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"URL"}),": ",(0,r.jsx)(n.code,{children:"/session"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method"}),": ",(0,r.jsx)(n.code,{children:"GET"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Headers"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"req_id"})," (optional): Optional caller-provided request ID. Integer (int64)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tenant_id"})," (required): The ID of the tenant. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"user_id"})," (required): The ID of the user who established the session. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_id"})," (required): The client ID of the MQTT session. String."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responses"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"200"}),": Success."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"404"}),": No session found for the given user and client ID."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-expire-inactive-persistent-session-using-given-expiry-time",children:"4. Expire inactive persistent session using given expiry time"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"URL"}),": ",(0,r.jsx)(n.code,{children:"/session"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method"}),": ",(0,r.jsx)(n.code,{children:"DELETE"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Headers"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"req_id"})," (optional): Optional caller-provided request ID. Integer (int64)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tenant_id"})," (required): The ID of the tenant. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"expiry_seconds"})," (optional): The overridden session expiry seconds. String."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responses"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"200"}),": Success."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"note",children:"Note"}),"\n",(0,r.jsx)(n.p,{children:"Setting expiry_seconds to 0 will clean all inboxes under the specified tenant, including those still\nonline. Connections will be disconnected due to the loss of metadata. It is crucial to set this parameter appropriately."}),"\n",(0,r.jsx)(n.h3,{id:"5-disconnect-a-mqtt-client-connection",children:"5. Disconnect a MQTT client connection"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"URL"}),": ",(0,r.jsx)(n.code,{children:"/kill"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method"}),": ",(0,r.jsx)(n.code,{children:"DELETE"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Headers"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"req_id"})," (optional): Optional caller-provided request ID. Integer (int64)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tenant_id"})," (required): The ID of the tenant. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"user_id"})," (required): The ID of the user who established the session. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_id"})," (required): The client ID of the MQTT session. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_type"})," (required): The kicker type. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_meta_*"}),": The metadata header about the kicker, must start with ",(0,r.jsx)(n.code,{children:"client_meta_"}),". String."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Responses"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"200"}),": Success."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"404"}),": Not Found."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"6-add-a-topic-subscription-to-an-mqtt-session",children:"6. Add a Topic Subscription to an MQTT session"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"}),": ",(0,r.jsx)(n.code,{children:"/sub"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"}),": ",(0,r.jsx)(n.code,{children:"PUT"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Headers"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"req_id"})," (optional): Optional caller-provided request ID. Integer (int64)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tenant_id"})," (required): The tenant ID. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"user_id"})," (required): The ID of the user who established the session. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_id"})," (required): The client ID of the MQTT session. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"topic_filter"})," (required): The topic filter. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sub_qos"})," (required): the subscription qos level. 0|1|2."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Responses"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"200"}),": Success."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"400"}),": Request is invalid."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"401"}),": Unauthorized to make the subscription using the given topic filter."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"404"}),": No session found for the given user and client ID."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"8-remove-a-topic-subscription-from-an-mqtt-session",children:"8. Remove a Topic Subscription from an MQTT session"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URL"}),": ",(0,r.jsx)(n.code,{children:"/unsub"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Method"}),": ",(0,r.jsx)(n.code,{children:"DELETE"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Headers"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"req_id"})," (optional): Optional caller-provided request ID. Integer (int64)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tenant_id"})," (required): The tenant ID. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"user_id"})," (required): The ID of the user who established the session. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client_id"})," (required): The client ID of the MQTT session. String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"topic_filter"})," (required): The topic filter. String."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Responses"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"200"}),": Success."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"401"}),": Unauthorized to remove the subscription of the given topic filter."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"404"}),": No session found for the given user and client ID."]}),"\n"]}),"\n"]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(36672);const r={},d=s.createContext(r);function l(e){const n=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);