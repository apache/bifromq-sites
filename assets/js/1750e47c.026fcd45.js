"use strict";(self.webpackChunkBifroMQ=self.webpackChunkBifroMQ||[]).push([[2349],{60684:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"configuration/performance_tuning_linux","title":"Performance Tuning (Linux)","description":"The following Kernel parameters can affect the maximum number of connections that the machine hosting BifroMQ can accept.","source":"@site/versioned_docs/version-2.1.x/04_configuration/3_performance_tuning_linux.md","sourceDirName":"04_configuration","slug":"/configuration/performance_tuning_linux","permalink":"/docs/2.1.x/configuration/performance_tuning_linux","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/bifromq-sites/tree/master/website/versioned_docs/version-2.1.x/04_configuration/3_performance_tuning_linux.md","tags":[],"version":"2.1.x","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Performance Tuning (Linux)"},"sidebar":"tutorialSidebar","previous":{"title":"Configuration file","permalink":"/docs/2.1.x/configuration/file_configs_manual"},"next":{"title":"Configuration Printing","permalink":"/docs/2.1.x/configuration/configs_print"}}');var s=i(23420),r=i(65404);const c={sidebar_position:3,title:"Performance Tuning (Linux)"},o="System Parameter Optimization",a={},l=[{value:"Memory",id:"memory",level:2},{value:"Maximum Open Files",id:"maximum-open-files",level:2},{value:"Max user processes",id:"max-user-processes",level:2},{value:"NetFilter Tuning",id:"netfilter-tuning",level:2},{value:"Server-Side and Load Testing TCP-related Tuning",id:"server-side-and-load-testing-tcp-related-tuning",level:2}];function m(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"system-parameter-optimization",children:"System Parameter Optimization"})}),"\n",(0,s.jsx)(n.p,{children:"The following Kernel parameters can affect the maximum number of connections that the machine hosting BifroMQ can accept."}),"\n",(0,s.jsx)(n.h2,{id:"memory",children:"Memory"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"vm.max_map_count: Limits the number of VMAs (Virtual Memory Areas) that a process can have. It can be increased to 221184."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"maximum-open-files",children:"Maximum Open Files"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"nofile: Specifies the maximum number of files that a single process can open."}),"\n",(0,s.jsx)(n.li,{children:"nr_open: Specifies the maximum number of files that can be allocated per process, usually defaulting to 1024 * 1024 = 1048576."}),"\n",(0,s.jsx)(n.li,{children:"file-max: Specifies the maximum number of files that the system kernel can open, with a default value of 185745."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"max-user-processes",children:"Max user processes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"nproc: Indicates the maximum number of processes that a single user can launch. For Java processes, each thread will also occupy a Linux proc resource. In certain versions, for non-root users, this parameter defaults to 4096 and may need to be appropriately increased."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"netfilter-tuning",children:"NetFilter Tuning"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"sysctl -a | grep conntrack"})," to view the current parameters. The following parameters determine the maximum number of connections:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["net.netfilter.nf_conntrack_buckets: The size of the hashtable buckets that record connection entries.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Modification command: ",(0,s.jsx)(n.code,{children:"echo 262144 > /sys/module/nf_conntrack/parameters/hashsize"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"net.netfilter.nf_conntrack_max: The maximum number of entries in the hashtable, generally equal to nf_conntrack_buckets * 4."}),"\n",(0,s.jsx)(n.li,{children:"net.nf_conntrack_max: Same as net.netfilter.nf_conntrack_max."}),"\n",(0,s.jsx)(n.li,{children:"net.netfilter.nf_conntrack_tcp_timeout_fin_wait: Default 120s -> Recommended 30s."}),"\n",(0,s.jsx)(n.li,{children:"net.netfilter.nf_conntrack_tcp_timeout_time_wait: Default 120s -> Recommended 30s."}),"\n",(0,s.jsx)(n.li,{children:"net.netfilter.nf_conntrack_tcp_timeout_close_wait: Default 60s -> Recommended 15s."}),"\n",(0,s.jsx)(n.li,{children:"net.netfilter.nf_conntrack_tcp_timeout_established: Default 432000 seconds (5 days) -> Recommended 300s."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The following sysctl parameters can affect the performance of TCP channels under high load:"}),"\n",(0,s.jsx)(n.h2,{id:"server-side-and-load-testing-tcp-related-tuning",children:"Server-Side and Load Testing TCP-related Tuning"}),"\n",(0,s.jsx)(n.p,{children:"It is recommended to use the CentOS 7 environment for deployment and stress testing."}),"\n",(0,s.jsx)(n.p,{children:"For CentOS 6, system parameter tuning is required:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["net.core.wmem_max: Maximum TCP data send window size (bytes).","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Modification command: ",(0,s.jsx)(n.code,{children:"echo 'net.core.wmem_max=16777216' >> /etc/sysctl.conf"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["net.core.wmem_default: Default TCP data send window size (bytes).","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Modification command: ",(0,s.jsx)(n.code,{children:"echo 'net.core.wmem_default=262144' >> /etc/sysctl.conf"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["net.core.rmem_max: Maximum TCP data receive window size (bytes).","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Modification command: ",(0,s.jsx)(n.code,{children:"echo 'net.core.rmem_max=16777216' >> /etc/sysctl.conf"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["net.core.rmem_default: Default TCP data receive window size (bytes).","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Modification command: ",(0,s.jsx)(n.code,{children:"echo 'net.core.rmem_default=262144' >> /etc/sysctl.conf"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["net.ipv4.tcp_rmem: Memory usage of the socket receive buffer - minimum, warning, maximum.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Modification command: ",(0,s.jsx)(n.code,{children:"echo 'net.ipv4.tcp_rmem= 1024 4096 16777216' >> /etc/sysctl.conf"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["net.ipv4.tcp_wmem: Memory usage of the socket send buffer - minimum, warning, maximum.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Modification command: ",(0,s.jsx)(n.code,{children:"echo 'net.ipv4.tcp_wmem= 1024 4096 16777216' >> /etc/sysctl.conf"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["net.core.optmem_max: The maximum buffer size (in bytes) allowed for each socket.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Modification command: ",(0,s.jsx)(n.code,{children:"echo 'net.core.optmem_max = 16777216' >> /etc/sysctl.conf"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["net.core.netdev_max_backlog: The length of the queue into which network device places requests.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Modification command:",(0,s.jsx)(n.code,{children:"echo 'net.core.netdev_max_backlog = 16384' >> /etc/sysctl.conf"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["After making the modifications, use ",(0,s.jsx)(n.code,{children:"sysctl -p"})," and restart the server for them to take effect."]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var t=i(36672);const s={},r=t.createContext(s);function c(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);