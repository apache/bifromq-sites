"use strict";(self.webpackChunkbifromq=self.webpackChunkbifromq||[]).push([[5619],{1042:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"plugin/intro","title":"Plugin Overview","description":"The plugin mechanism is a primary way for BifroMQ to deeply integrate with business systems. Currently, BifroMQ exposes four types of plugin extension interfaces to cater to different usage scenarios:","source":"@site/versioned_docs/version-3.1.x/06_plugin/intro.md","sourceDirName":"06_plugin","slug":"/plugin/intro","permalink":"/docs/3.1.x/plugin/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/bifromq-sites/tree/master/website/versioned_docs/version-3.1.x/06_plugin/intro.md","tags":[],"version":"3.1.x","sidebarPosition":0,"frontMatter":{"id":"intro","sidebar_position":0,"title":"Plugin Overview"},"sidebar":"tutorialSidebar","previous":{"title":"API Reference","permalink":"/docs/3.1.x/user_guide/api/api_reference"},"next":{"title":"Auth Provider","permalink":"/docs/3.1.x/plugin/auth_provider"}}');var r=i(23420),o=i(65404);const s={id:"intro",sidebar_position:0,title:"Plugin Overview"},l=void 0,a={},c=[{value:"Plugin Development",id:"plugin-development",level:2},{value:"Plugin Deployment",id:"plugin-deployment",level:2},{value:"Version Compatibility",id:"version-compatibility",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"The plugin mechanism is a primary way for BifroMQ to deeply integrate with business systems. Currently, BifroMQ exposes four types of plugin extension interfaces to cater to different usage scenarios:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/3.1.x/plugin/auth_provider",children:"Auth Provider"})}),": Integrates authentication and topic Pub/Sub authorization logic."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/3.1.x/plugin/event_collector",children:"Event Collector"})}),": Collects runtime events to implement various event-driven business logic."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/3.1.x/plugin/resource_throttler",children:"Resource Throttler"})}),": Dynamically controls resource usage at the tenant level."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/3.1.x/plugin/setting_provider/intro",children:"Setting Provider"})}),": Dynamically adjusts tenant-specific MQTT protocol settings."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"plugin-development",children:"Plugin Development"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Project Organization: A pf4j project can contain multiple plugin implementations."}),"\n",(0,r.jsx)(n.li,{children:"Singleton Plugins: Extensions of AuthProvider, Resource Throttler, and Setting Provider types are singletons at runtime. The specific type to be loaded needs to be specified through a configuration file."}),"\n",(0,r.jsx)(n.li,{children:"Multiple Instance Plugins: EventCollector allows for multiple different types of instances to exist, with interface methods of these EventCollector instances being called back simultaneously."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"plugin-deployment",children:"Plugin Deployment"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Plugin Directory: BifroMQ loads plugin implementations (JAR files or directories) from the plugins subdirectory within its installation directory."}),"\n",(0,r.jsx)(n.li,{children:"Classloader Isolation: Each plugin uses an independent ClassLoader to isolate its code from BifroMQ and other plugins."}),"\n",(0,r.jsxs)(n.li,{children:["BifroMQ provides class loading for the following commonly used packages:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"com.baidu.bifromq.*"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"io.micrometer.core.*"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"com.google.protobuf.*"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"org.slf4j.*"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": Some 3rd party dependencies used in a plugin may use the ",(0,r.jsx)(n.code,{children:"Thread.currentThread().getContextClassLoader()"})," to load classes, which can result in a ",(0,r.jsx)(n.code,{children:"ClassNotFoundException"}),". To prevent this, you can include the logic for loading dependency classes within the following try-finally structure:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public pluginMethod() {\n    ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n    // using PluginClassLoader for context class loader \n    Thread.currentThread().setContextClassLoader(this.getClass().getClassLoader());\n    try {\n        // loading 3rd party dependencies\n    } finally {\n        Thread.currentThread().setContextClassLoader(contextLoader);\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"version-compatibility",children:"Version Compatibility"}),"\n",(0,r.jsx)(n.p,{children:"To ensure optimal compatibility and avoid potential issues, it is advised to deploy your custom plugin with the main version of the BifroMQ main program aligned."}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If BifroMQ's version is 3.x.y, then the version of the plugin interface definition modules used should also be 3.x.y."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,r.jsx)(n.p,{children:"BifroMQ calls plugin interface methods on worker threads. Ensure plugin interface implementations are lightweight and non-blocking to avoid negatively impacting performance."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(36672);const r={},o=t.createContext(r);function s(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);