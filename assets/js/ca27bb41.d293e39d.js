"use strict";(self.webpackChunkbifromq=self.webpackChunkbifromq||[]).push([[6639],{53546:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var i=n(59729);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}},67078:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"user_guide/basic/connect","title":"Connect to BifroMQ","description":"BifroMQ is a standard MQTT messaging middleware, which allows you to connect using any client that supports MQTT version 3.1, 3.1.1 or 5.0.","source":"@site/docs/user_guide/basic/connect.md","sourceDirName":"user_guide/basic","slug":"/user_guide/basic/connect","permalink":"/docs/user_guide/basic/connect","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/bifromq-sites/tree/master/docs/user_guide/basic/connect.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Connect to BifroMQ"},"sidebar":"tutorialSidebar","previous":{"title":"MQTT Basic Features Highlights","permalink":"/docs/user_guide/basic/intro"},"next":{"title":"Pub/Sub","permalink":"/docs/user_guide/basic/pubsub"}}');var o=n(65813),s=n(53546);const r={sidebar_position:1,title:"Connect to BifroMQ"},c=void 0,a={},d=[{value:"Connection Address",id:"connection-address",level:2},{value:"Authentication and Authorization",id:"authentication-and-authorization",level:2}];function u(e){const t={a:"a",code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"BifroMQ is a standard MQTT messaging middleware, which allows you to connect using any client that supports MQTT version 3.1, 3.1.1 or 5.0."}),"\n",(0,o.jsx)(t.h2,{id:"connection-address",children:"Connection Address"}),"\n",(0,o.jsx)(t.p,{children:"Use the IP address or domain name corresponding to the launched service. Below are the default ports and their purposes:"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Port"}),(0,o.jsx)(t.th,{children:"Note"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"IP or Domain:1883"}),(0,o.jsx)(t.td,{children:"TCP Connection"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"IP or Domain:1884"}),(0,o.jsx)(t.td,{children:"TLS Connection"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"IP or Domain:80/mqtt"}),(0,o.jsx)(t.td,{children:"WS Connection"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"IP or Domain:443/mqtt"}),(0,o.jsx)(t.td,{children:"WSS Connection"})]})]})]}),"\n",(0,o.jsx)(t.h2,{id:"authentication-and-authorization",children:"Authentication and Authorization"}),"\n",(0,o.jsxs)(t.p,{children:["By default, without an AuthProvider plugin, BifroMQ does not enforce authentication or authorization. However, you can assign a connection to a specific tenant by specifying the username in the format ",(0,o.jsx)(t.code,{children:"<TenantId>/<UserName>"}),". If you omit the tenant prefix, the connection will be assigned to the default ",(0,o.jsx)(t.code,{children:'"DevOnly"'})," tenant."]}),"\n",(0,o.jsxs)(t.p,{children:["For full authentication and authorization support, please refer to the ",(0,o.jsx)(t.a,{href:"/docs/plugin/auth_provider",children:"AuthProvider Plugin"}),"."]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);