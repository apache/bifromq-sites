"use strict";(self.webpackChunkbifromq=self.webpackChunkbifromq||[]).push([[63561],{15886:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"user_guide/integration/intro","title":"Data Integration Overview","description":"BifroMQ focuses on being deeply integrated, providing foundational MQTT capabilities for various messaging systems. This guide primarily introduces the recommended methods for data integration with BifroMQ.","source":"@site/docs/user_guide/integration/intro.md","sourceDirName":"user_guide/integration","slug":"/user_guide/integration/intro","permalink":"/docs/user_guide/integration/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/bifromq-sites/tree/master/docs/user_guide/integration/intro.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"id":"intro","sidebar_position":0,"title":"Data Integration Overview"},"sidebar":"tutorialSidebar","previous":{"title":"Shared Subscriptions","permalink":"/docs/user_guide/basic/shared_sub"},"next":{"title":"API Overview","permalink":"/docs/user_guide/api/intro"}}');var r=t(23420),o=t(65404);const s={id:"intro",sidebar_position:0,title:"Data Integration Overview"},a=void 0,d={},l=[{value:"Understanding Data Integration with BifroMQ",id:"understanding-data-integration-with-bifromq",level:2},{value:"Common Pattern",id:"common-pattern",level:3},{value:"Non-Coupled Pattern",id:"non-coupled-pattern",level:3},{value:"Directions of Message Flow Integration",id:"directions-of-message-flow-integration",level:2},{value:"1. From BifroMQ to External Systems",id:"1-from-bifromq-to-external-systems",level:3},{value:"2. From External Systems to BifroMQ",id:"2-from-external-systems-to-bifromq",level:3},{value:"Considerations for Implementing Data Integration",id:"considerations-for-implementing-data-integration",level:2},{value:"Reference for Starters",id:"reference-for-starters",level:2}];function c(e){const n={a:"a",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"BifroMQ focuses on being deeply integrated, providing foundational MQTT capabilities for various messaging systems. This guide primarily introduces the recommended methods for data integration with BifroMQ."}),"\n",(0,r.jsx)(n.h2,{id:"understanding-data-integration-with-bifromq",children:"Understanding Data Integration with BifroMQ"}),"\n",(0,r.jsx)(n.p,{children:"Data integration with BifroMQ involves a bidirectional flow of messages between BifroMQ and external systems, including databases, rule-based message forwarding systems, other messaging middleware, or another MQTT Broker. This integration encompasses several key aspects:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Protocol Conversion"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Service Quality Matching"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Message Routing"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Flow Control"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Monitoring"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Scalability Considerations"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"common-pattern",children:"Common Pattern"}),"\n",(0,r.jsx)(n.p,{children:"A common architectural pattern involves embedding downstream system clients directly within the MQTT Broker. This method utilizes specific communication mechanisms and mapping logic to achieve protocol conversion, treating the MQTT protocol implementation and integration with heterogeneous systems as a unified whole, providing out-of-the-box integration capabilities."}),"\n",(0,r.jsx)(n.mermaid,{value:'flowchart LR\n\n%% \u6574\u4f53\u6846\u67b6\n    subgraph MQTT_Broker_System["MQTT Broker System"]\n\n        mqttserver[MQTT Server]\n\n        subgraph Data Integration\n            kafkaproducer[Kafka Producer]\n            mongoclient[Mongo Client]\n            otherclients[Other Clients]\n        end\n\n        mqttserver -- Ad-hoc --\x3e kafkaproducer\n        mqttserver -- Ad-hoc --\x3e mongoclient\n        mqttserver -- Ad-hoc --\x3e otherclients\n    end\n\n%% \u5916\u90e8\u8fde\u63a5\n    mqttclient[MQTT Client] --\x3e|Pub/Sub| mqttserver\n\n%% \u76ee\u6807\u7cfb\u7edf\n    kafkaproducer --\x3e kafka[kafka]\n    mongoclient --\x3e mongodb[mongoDB]\n    otherclients --\x3e cloud[Cloud Service]'}),"\n",(0,r.jsx)(n.h3,{id:"non-coupled-pattern",children:"Non-Coupled Pattern"}),"\n",(0,r.jsx)(n.p,{children:"Contrary to the common practice, BifroMQ recommends a non-coupled approach for data integration: Integration logic directly utilizes the MQTT protocol as a client to subscribe to messages from BifroMQ. This architectural pattern allows the integration module to be reused across different MQTT Brokers, hence the BifroMQ project itself does not include out-of-the-box data integration functionalities."}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart LR\n\n%% \u5de6\u4fa7 MQTT Clients\n    mqttclients[MQTT Clients]\n\n%% \u4e2d\u95f4 BifroMQ\n    bifromq[BifroMQ]\n\n%% \u53f3\u4e0a Kafka Integration\n    subgraph Kafka Integration\n        kafka_mqtt[MQTT Clients]\n        kafka_producer[Kafka Producer]\n        kafka[kafka]\n        kafka_mqtt --\x3e kafka_producer --\x3e kafka\n    end\n\n%% \u53f3\u4e0b Mongo Integration\n    subgraph Mongo Integration\n        mongo_mqtt[MQTT Clients]\n        mongo_client[Mongo Client]\n        mongodb[mongoDB]\n        mongo_mqtt --\x3e mongo_client --\x3e mongodb\n    end\n\n%% \u4e3b\u5e72\u8fde\u63a5\n    mqttclients -- Pub/Sub --\x3e bifromq\n    bifromq -- Shared Sub --\x3e kafka_mqtt\n    bifromq -- Shared Sub --\x3e mongo_mqtt"}),"\n",(0,r.jsx)(n.h2,{id:"directions-of-message-flow-integration",children:"Directions of Message Flow Integration"}),"\n",(0,r.jsx)(n.p,{children:"There are two primary directions for message flow integration with BifroMQ:"}),"\n",(0,r.jsx)(n.h3,{id:"1-from-bifromq-to-external-systems",children:"1. From BifroMQ to External Systems"}),"\n",(0,r.jsxs)(n.p,{children:["BifroMQ recommends using the ",(0,r.jsx)(n.a,{href:"/docs/user_guide/basic/shared_sub",children:"shared subscription"})," feature to balance the message load sent to downstream systems, utilizing MQTT's QoS capabilities for semantic message forwarding. This approach requires maintaining a set of MQTT client connections that subscribe to BifroMQ. Notably, BifroMQ supports shared subscriptions across MQTT versions 3.1, 3.1.1, and 5.0."]}),"\n",(0,r.jsx)(n.h3,{id:"2-from-external-systems-to-bifromq",children:"2. From External Systems to BifroMQ"}),"\n",(0,r.jsxs)(n.p,{children:["External systems can publish messages to BifroMQ using direct MQTT client connections or the ",(0,r.jsx)(n.a,{href:"/docs/user_guide/api/intro",children:"HTTP Restful API"}),", providing a straightforward method for message injection into the BifroMQ deployment."]}),"\n",(0,r.jsx)(n.h2,{id:"considerations-for-implementing-data-integration",children:"Considerations for Implementing Data Integration"}),"\n",(0,r.jsx)(n.p,{children:"When integrating data with BifroMQ, consider the following:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bandwidth Limitations"}),": BifroMQ defaults to a bandwidth limit of 512kb/s per MQTT connection, adjustable via Tenant Settings. Calculating the number of connections needed based on actual business demands when receiving messages forwarded through shared subscriptions is crucial."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Flow Control"}),": Using MQTT as the forwarding protocol inherently provides flow control. Downstream systems must have sufficient resources to receive forwarded messages to avoid backpressure-induced message loss."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Monitoring"}),": Thanks to the use of the MQTT protocol, the monitoring metrics provided by BifroMQ can be directly reused during the message forwarding phase, simplifying the integration monitoring process."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"reference-for-starters",children:"Reference for Starters"}),"\n",(0,r.jsxs)(n.p,{children:["This ",(0,r.jsx)(n.a,{href:"https://github.com/bifromqio/bifromq-data-integration",children:"project"})," showcases the concepts discussed in this guide and can serve as a reference for similar projects."]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(36672);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);