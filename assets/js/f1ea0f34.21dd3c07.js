"use strict";(self.webpackChunkBifroMQ=self.webpackChunkBifroMQ||[]).push([[7749],{27125:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"get_started/intro","title":"Introduction","description":"BifroMQ (Incubating) is a Java-based, high-performance, distributed MQTT broker implementation that seamlessly integrates native multi-tenancy support. It is designed to facilitate the building of large-scale IoT device connections and messaging","source":"@site/docs/get_started/intro.md","sourceDirName":"get_started","slug":"/get_started/intro","permalink":"/docs/get_started/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/bifromq-sites/tree/master/website/docs/get_started/intro.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"id":"intro","sidebar_position":0,"title":"Introduction"},"sidebar":"tutorialSidebar","next":{"title":"Download","permalink":"/docs/get_started/download/intro"}}');var n=t(23420),r=t(65404);const o={id:"intro",sidebar_position:0,title:"Introduction"},a=void 0,l={},d=[{value:"Origin of the Name",id:"origin-of-the-name",level:2},{value:"Features List",id:"features-list",level:2},{value:"Community",id:"community",level:2},{value:"<strong>Issue Tracker</strong>",id:"issue-tracker",level:4},{value:"<strong>Mailing List</strong>",id:"mailing-list",level:4},{value:"<strong>Discord</strong>",id:"discord",level:4}];function c(e){const i={a:"a",code:"code",h2:"h2",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:"BifroMQ (Incubating) is a Java-based, high-performance, distributed MQTT broker implementation that seamlessly integrates native multi-tenancy support. It is designed to facilitate the building of large-scale IoT device connections and messaging\nsystems."}),"\n",(0,n.jsx)(i.h2,{id:"origin-of-the-name",children:"Origin of the Name"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"BifroMQ"})," derives its name from the Norse mythological ",(0,n.jsx)(i.code,{children:"Bifr\xf6st"}),", a rainbow bridge that connects Midgard (the realm of humans) and Asgard (the domain of gods). Like Bifr\xf6st, BifroMQ serves as a flexible and sturdy bridge, linking different\nsystems or applications to enable communication through message exchange. This aligns with the core function of MQTT middleware, which is to manage and accelerate message delivery in distributed systems."]}),"\n",(0,n.jsx)(i.p,{children:"The robustness of Bifr\xf6st symbolizes BifroMQ's stability and reliability, while its flexibility signifies BifroMQ's scalability and adaptability. In a nutshell, \"BifroMQ\" epitomizes resilient, adaptable MQTT middleware that interconnects\nvarious systems or applications."}),"\n",(0,n.jsx)(i.h2,{id:"features-list",children:"Features List"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Full support for MQTT 3.1, 3.1.1 and 5.0 features over TCP, TLS, WS, WSS."}),"\n",(0,n.jsx)(i.li,{children:"Native support for multi-tenancy, resource sharing, and workload isolation."}),"\n",(0,n.jsx)(i.li,{children:"Built-in distributed storage engine optimized for MQTT workloads, with no third-party middleware dependencies."}),"\n",(0,n.jsxs)(i.li,{children:["Extension mechanism for supporting:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Authentication/Authorization."}),"\n",(0,n.jsx)(i.li,{children:"Tenant-level Client Balancing."}),"\n",(0,n.jsx)(i.li,{children:"Tenant-level Resource Throttling."}),"\n",(0,n.jsx)(i.li,{children:"Tenant-level Runtime Setting."}),"\n",(0,n.jsx)(i.li,{children:"Event & Monitoring."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"community",children:"Community"}),"\n",(0,n.jsx)(i.h4,{id:"issue-tracker",children:(0,n.jsx)(i.strong,{children:"Issue Tracker"})}),"\n",(0,n.jsxs)(i.p,{children:["We use GitHub ",(0,n.jsx)(i.a,{href:"https://github.com/apache/bifromq/issues",children:"Issues"})," for tracking requests and bugs. Feel free to open an issue if you have any questions or problems."]}),"\n",(0,n.jsx)(i.h4,{id:"mailing-list",children:(0,n.jsx)(i.strong,{children:"Mailing List"})}),"\n",(0,n.jsx)(i.p,{children:"We use Apache mailing lists for asynchronous discussion and announcements. Please choose the appropriate list for your needs:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.a,{href:"mailto:dev@bifromq.apache.org",children:"dev@bifromq.apache.org"})})," \u2013 General development discussions, design questions, and community support."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.a,{href:"mailto:private@bifromq.apache.org",children:"private@bifromq.apache.org"})})," \u2013 Private or security-sensitive discussions and confidential topics."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.a,{href:"mailto:commits@bifromq.apache.org",children:"commits@bifromq.apache.org"})})," \u2013 Automated notifications of commits and repository activity."]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["To subscribe or manage your subscription for any of these lists, visit the Apache Mailing List page, for example: ",(0,n.jsx)(i.a,{href:"https://lists.apache.org/list.html?dev@bifromq.apache.org",children:"dev@bifromq.apache.org"}),"."]}),"\n",(0,n.jsx)(i.h4,{id:"discord",children:(0,n.jsx)(i.strong,{children:"Discord"})}),"\n",(0,n.jsx)(i.p,{children:"We also use Discord for real-time chat and community discussion. Join our server to ask questions, share ideas, and stay up-to-date with the latest project progress. Please adhere to the Apache Code of Conduct while participating."}),"\n",(0,n.jsx)("a",{href:"https://discord.gg/Pfs3QRadRB",children:(0,n.jsx)("img",{src:"https://img.shields.io/discord/1115542029531885599?logo=discord&logoColor=white",alt:"BifroMQ Discord server"})})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},65404:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>a});var s=t(36672);const n={},r=s.createContext(n);function o(e){const i=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);